#!/usr/bin/env escript

-define(SleepTime, 3000).
-define(CompileEts, compileEts).

main(_) ->
	ets:new(?CompileEts, [public, named_table, {keypos,1}]),
	setTitle("unknown", "unknown"),
	menu(),
	ok.

	
menu() ->
	%%读取配置
	io:format(
		"==========================================================~n"
		"==========================================================~n"
		"             HXBNS multi-language compile             ~n~n"
		"1.(chs) China~n"
		"2.(cht) Taiwan~n"
		"3.(enu) English~n"
		"4.(kor) Korea~n"
		"5.(xmt) Malaysia~n"
		"6.(tha) Thailand~n"
		"7.(rus) Russia~n"
		"8.(jpn) Japan~n"
		"9.(vietnam)  Vietnam~n"
		"~n888. jump _package_~n"
		"0.exit~n~n"
	),
	InputNoStr = io:get_line("Please enter your choice:"),
	{InputNo, _Rest} = string:to_integer(InputNoStr),
	dispatchInput(InputNo).

dispatchInput(0) -> ok;
dispatchInput(1) -> menu2(chs);
dispatchInput(2) -> menu2(cht);
dispatchInput(3) -> menu2(enu);
dispatchInput(4) -> menu2(kor);
dispatchInput(5) -> menu2(xmt);
dispatchInput(6) -> menu2(tha);
dispatchInput(7) -> menu2(rus);
dispatchInput(8) -> menu2(jpn);
dispatchInput(9) -> menu2(vietnam);
dispatchInput(888) ->
	os:cmd("start misc_menu.ers"),
	ok;
dispatchInput(_) -> menu().

getCompileServer(1) -> all;
getCompileServer(2) -> gs;
getCompileServer(3) -> dbs;
getCompileServer(4) -> ls;
getCompileServer(5) -> ls;
getCompileServer(11) -> allD;
getCompileServer(12) -> gsD;
getCompileServer(13) -> dbsD;
getCompileServer(14) -> lsD;
getCompileServer(15) -> lsD.

menu2(V) ->
	io:format(
		"~n----------------------------------------------------------~n"
		"             select compile sub order             ~n~n"
		"1.release all~n"
		"2.release gs~n"
		"3.release dbs~n"
		"4.release ls~n"
		"----------------------~n"
		"11.debug all~n"
		"12.debug gs~n"
		"13.debug dbs~n"
		"14.debug ls~n"
		"----------------------------------------------------------~n"
		"9.return main...~n"
		"~n888. jump _package_~n"
		"0.exit~n~n"
	),
	setTitle(V, "unknown"),
	InputNoStr = io:get_line("Please enter your choice:"),
	{InputNo, _Rest} = string:to_integer(InputNoStr),
	dispatchInput2(V, InputNo).

dispatchInput2(_Lang, 0) -> ok;
dispatchInput2(Lang, Compile) when erlang:is_integer(Compile) andalso ((Compile >= 1 andalso Compile =< 5) orelse (Compile >= 11 andalso Compile =< 15)) ->
	setTitle(Lang, getCompileServer(Compile)),
	if
		Compile =:= 1 ->
			compile(Lang, 2),
			compile(Lang, 3),
			compile(Lang, 4);
%%			compile(Lang, 5);
		Compile =:= 11 ->
			compile(Lang, 12),
			compile(Lang, 13),
			compile(Lang, 14);
%%			compile(Lang, 15);
		true ->
			compile(Lang, Compile)
	end,
	compileWait(Lang, Compile);
dispatchInput2(_Lang, 9) -> menu();
dispatchInput2(_Lang, 888) ->
	os:cmd("start misc_menu.ers"),
	ok;
dispatchInput2(Lang, _Compile) -> menu2(Lang).

compileWait(Lang, Compile) ->
	waitATime(?SleepTime),
	case ets:info(?CompileEts, size) of
		0 ->
			io:format("---compile end---~n~n"),

			%% 记录编译日期，编译版本，并提交SVN
			os:cmd("svn update _________COMPILE_TIME_________.txt"),
			{{Y,M,D},{H,Min,S}} = calendar:local_time(),
			Result = io_lib:format("~p-~p-~p ~p:~p:~p compile ~p[~p]",
				[Y, M, D, H, Min, S, Lang, getCompileServer(Compile)]),
			file:write_file("./_________COMPILE_TIME_________.txt", Result),
			os:cmd("svn commit -m \"compile time\" _________COMPILE_TIME_________.txt"),
			os:cmd("svn update"),

			waitATime(?SleepTime),
			menu2(Lang);
		_ ->
			compileWait(Lang, Compile)
	end.

compile(Lang, Compile) ->
	erlang:spawn(fun() -> compile2(Lang, Compile) end),
	waitATime(?SleepTime),
	ok.
compile2(Lang, Compile) ->
	ets:insert(?CompileEts, {Compile, Lang}),
	Target = getCompileServer(Compile),
	FileName = io_lib:format("./compile_~p_~p.txt", [Lang, Target]),
	CmdStr = io_lib:format("make ~p Region=\"~p\" > ~ts", [Target, Lang, FileName]),
	
	io:format("compile [~p,~p] start, please wait...~n", [Lang, Target]),
	file:write_file(FileName, ""),
	
	Ret = os:cmd(CmdStr),
	case string:str(Ret, "recipe for target") of
		0 -> io:format("@@@compile [~p,~p] success@@@~n", [Lang, Target]);
		_ -> io:format("***compile [~p,~p] ERROR ERROR ERROR !!!***~n", [Lang, Target])
	end,
	io:format("^^^^^^^^^^^^^^^^^^^^^^~n~n"),
	ets:delete(?CompileEts, Compile),
	ok.

waitATime(Time) ->
	receive
		tttttttttttttttcccccccccccccccc ->
			ok
	after Time ->
		ok
	end.
	
	
setTitle(Lang, Mode)->
	case os:type() of
		{win32, _} ->
			{_,Cwd} = file:get_cwd(),
			os:cmd(io_lib:format('title "~p|~p|~p"',[Cwd,Lang, Mode]));
		_ ->
			skip
	end.

	