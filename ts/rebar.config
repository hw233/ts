%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% escript_incl_extra is for internal rebar-private use only.
%% Do not use outside rebar. Config interface is not stable.
{escript_incl_extra, [{"priv/templates/*", "."}]}.

%% Erlang compiler options
{erl_opts,
	[
		debug_info,
		%%{d,'RELEASE'},
		{i, "include/common"},
	  	{i, "include"},
	  	{i, "src/common/netmsg"},
	  	{i, "src/game/config"},
		{i, "src/common/emysql/include"},
	  	{src_dirs,
	   		[
	       		"src"
	   		]
	  	}
	 	]
}.
{pre_hooks,[
	%%{"linux|bsd|darwin|solaris", compile, "escript ./support/build_log_define.ers"},
%%	{"win32", compile, "escript.exe ./support/build_db_record.ers"},
 	%%{"win32", compile, "escript.exe ./support/build_log_define.ers"}
	%%{"win32", compile, "escript.exe ./support/process_dict_build.ers"}
]}.

{cover_enabled, true}.
{sub_dirs, [
			"src"
			]
}.

%% -*- mode: erlang -*-
%% Erlang compiler options
{erl_opts,[
    debug_info,
    report,
    verbose,
    %warn_deprecated_function,
    warn_deprecated_type,
    warn_export_all,
    warn_export_vars,
    warn_obsolete_guard,
   % warn_untyped_record,
    warn_unused_import,
	%{parse_transform, lager_transform}
	{src_dirs, ["deps", "src"]}
    % do NOT include warnings_as_errors, as rebar includes these options
    % when compiling for eunit, and at least one test module has code that
    % is deliberatly broken and will generate an un-maskable warning
]}.

{cover_enabled, true}.

{dialyzer_opts, [{warnings, [no_return,
                             no_unused,
                             no_improper_lists,
                             no_fun_app,
                             no_match,
                             no_opaque,
                             no_fail_call,
                             error_handling,
                             race_conditions,
                             behaviours,
                             unmatched_returns]}]}.
							 
							 
{xref_warnings, false}.
%% optional extra paths to include in xref:set_library_path/2.
%% specified relative location of rebar.config.
%% e.g. {xref_extra_paths,["../gtknode/src"]}
{xref_extra_paths,[]}.
%% xref checks to run
{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, exports_not_used,
               deprecated_function_calls, deprecated_functions]}.
%% Optional custom xref queries (xref manual has details) specified as
%%     {xref_queries, [{query_string(), expected_query_result()},...]}
%% The following for example removes all references to mod:*foo/4
%% functions from undefined external function calls as those are in a
%% generated module
{xref_queries,
 [{"(XC - UC) || (XU - X - B"
   " - (\"mod\":\".*foo\"/\"4\"))",[]}]}.